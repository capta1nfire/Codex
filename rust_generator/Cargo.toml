[package]
name = "rust_generator"
version = "0.1.0"
edition = "2021"

# NO hay sección [lib] porque estamos construyendo un binario (src/main.rs)

[dependencies]
# === CORE QR GENERATION ===
qrcodegen = "1.8"              # Biblioteca base optimizada para QR
imageproc = "0.24"             # Procesamiento avanzado de imágenes
rusttype = "0.9"               # Renderizado de texto para marcos
geo-types = "0.7"              # Tipos geométricos para detección de colisiones

# === PERFORMANCE ===
rayon = "1.8"                  # Paralelización
# packed_simd_2 = "0.3"        # SIMD requiere nightly - TODO: usar std::simd cuando esté estable
memmap2 = "0.9"                # Memory-mapped files para logos grandes

# === IMAGE PROCESSING ===
image = "0.24"                 # Manipulación de imágenes
resvg = "0.40"                 # SVG rendering de alta calidad
tiny-skia = "0.11"             # Rasterización 2D rápida
gif = "0.13"                   # Para QR animados (futuro)
base64 = "0.22"                # Codificación base64 para logos

# === VALIDATION ===
# zbar pendiente - buscaremos alternativa Rust pura
# gs1 pendiente - implementaremos validación manual

# === EXISTING DEPENDENCIES ===
rxing = { version = "0.7.1", features = ["image", "svg_write"] } # Mantenemos para compatibilidad
lazy_static = "1.4.0"

# --- Dependencias para el servidor web Axum ---
axum = "0.6"
tokio = { version = "1", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
chrono = { version = "0.4.34", features = ["serde"] }
dashmap = "5.5.3"
tower = "0.4"
tower-http = { version = "0.3", features = ["cors"] }

# --- Sistema de logging profesional ---
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
tracing-appender = "0.2"

# === NUEVAS UTILIDADES ===
bincode = "1.3"                # Serialización binaria eficiente
thiserror = "1.0"              # Error handling mejorado
once_cell = "1.19"             # Para lazy statics más eficientes
parking_lot = "0.12"           # Mutex/RwLock más eficientes
regex = "1.10"                 # Para optimización de SVG
uuid = { version = "1.6", features = ["v4", "serde"] }  # Para IDs únicos en reportes

# === CACHING ===
redis = { version = "0.25", features = ["cluster", "tokio-comp", "connection-manager"] }  # Redis con soporte para clustering
sha2 = "0.10"  # Para generar cache keys

[dev-dependencies]
# Dependencias solo para desarrollo/tests
console-subscriber = "0.2" # Para integración con tokio-console (opcional, desarrollo)
criterion = { version = "0.5", features = ["html_reports"] } # Benchmarking
proptest = "1.4" # Property-based testing

[[bench]]
name = "qr_benchmarks"
harness = false

